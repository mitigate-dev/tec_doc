#!/usr/bin/env ruby

$:.unshift File.dirname(__FILE__) + '/../lib'

require "rubygems"
require "tec_doc"
require "optparse"
require "irb"

I18n.available_locales = %w[en lv]
I18n.locale = "en"
TecDoc.client = TecDoc::Client.new

Savon.configure do |config|
  config.logger = Logger.new(STDOUT)
  config.logger.level = Logger::INFO
end

HTTPI.logger.level = Logger::INFO

parser = OptionParser.new do |opts|

  opts.banner = "Usage: tec_doc -p <provider id> -c <country code> [-l <language code>] [-m <mode>] [-v]"

  opts.on("-p", "--provider <provider id>", "TecDoc provider ID") do |provider|
    TecDoc.client.provider = provider
  end

  opts.on("-c", "--country <country code>", "Country code according to ISO 3166") do |country|
    TecDoc.client.country = country
  end

  opts.on("-l", "--lang <language code>", "Language code according to ISO 639") do |lang|
    I18n.locale = lang
  end

  opts.on("-m", "--mode <test|live>", "Mode ('live' by default)") do |mode|
    TecDoc.client.mode = mode.to_sym
  end

  opts.on("-v", "--verbose", "") do |verbose|
    Savon.config.logger.level = Logger::DEBUG
    HTTPI.logger.level = Logger::DEBUG
  end

end

parser.parse!

unless TecDoc.client.provider && TecDoc.client.country
  puts parser
  exit 1
end

puts "TecDoc shell v#{TecDoc::VERSION} [provider:#{TecDoc.client.provider} country:#{TecDoc.client.country} lang:#{I18n.locale} mode: #{TecDoc.client.mode}]"
ARGV.clear # otherwise all script parameters get passed to IRB
IRB.start
